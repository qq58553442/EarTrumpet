<Window x:Class="EarTrumpet.UI.Views.FullWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Theme="clr-namespace:EarTrumpet.UI.Themes"
        xmlns:resx="clr-namespace:EarTrumpet.Properties"
        xmlns:ui="clr-namespace:EarTrumpet.UI"
        xmlns:views="clr-namespace:EarTrumpet.UI.Views"
        Name="WindowRoot"
        Title="{x:Static resx:Resources.FullWindowTitleText}"
        Theme:Options.Source="App"
        SizeToContent="WidthAndHeight"
        Style="{DynamicResource FullWindowDialogWindowStyle}"
        WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <Style x:Key="FullWindowDialogWindowStyle"
               BasedOn="{StaticResource DialogWindowStyle}"
               TargetType="{x:Type Window}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="ResizeMode" Value="NoResize" />
        </Style>

        <Style x:Key="DeviceHeaderGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="DeviceHeaderBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="AppListBorderStyle"
               BasedOn="{StaticResource BaseAppListBorderStyle}"
               TargetType="{x:Type Border}">
            <Setter Property="Theme:Brush.Background" Value="Background" />
        </Style>

        <Style x:Key="VolumeControlPopupBorder"
               BasedOn="{StaticResource BaseVolumeControlPopupBorder}"
               TargetType="{x:Type Border}">
            <Setter Property="Theme:Brush.Background" Value="Background" />
            <Setter Property="Theme:Brush.BorderBrush" Value="SystemAccent" />
        </Style>

        <Style x:Key="VirtualTitleBarBorderStyle"
               BasedOn="{StaticResource BaseVirtualTitleBarBorderStyle}"
               TargetType="{x:Type Border}">
            <Setter Property="Theme:Brush.Background" Value="Light=LightListLow, Dark=DarkChromeMediumLow, HighContrast=Window" />
        </Style>

        <Style x:Key="VirtualTitleBarButtonStyle"
               BasedOn="{StaticResource BaseVirtualTitleBarButtonStyle}"
               TargetType="{x:Type Button}">
            <Setter Property="Theme:Brush.Foreground" Value="Text" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Theme:Brush.Background" Value="Light=LightBaseMediumLow/0.12, Dark=DarkBaseMediumLow/0.12, HighContrast=Highlight" />
                    <Setter Property="Theme:Brush.Foreground" Value="Theme=ApplicationText{Theme}Theme, HighContrast=HighlightText" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Theme:Brush.Background" Value="Light=LightBaseMediumLow/0.2, Dark=DarkBaseMediumLow/0.2, HighContrast=Highlight" />
                    <Setter Property="Theme:Brush.Foreground" Value="Theme=ApplicationText{Theme}Theme, HighContrast=HighlightText" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="VirtualTitleBarTextStyle"
               BasedOn="{StaticResource BaseVirtualTitleBarTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Theme:Brush.Foreground" Value="Text" />
        </Style>

        <Style x:Key="PerThemeTextBlockStyle"
               BasedOn="{StaticResource TextBlockStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Theme:Brush.Foreground" Value="Text" />
        </Style>

        <Style x:Key="DeviceVolumeTextStyle"
               BasedOn="{StaticResource BaseDeviceVolumeTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Theme:Brush.Foreground" Value="Text" />
        </Style>

        <Style x:Key="AppVolumeTextStyle"
               BasedOn="{StaticResource BaseAppVolumeTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Theme:Brush.Foreground" Value="Text" />
        </Style>

        <Style x:Key="DeviceTitleTextStyle"
               BasedOn="{StaticResource BaseDeviceTitleTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Theme:Brush.Foreground" Value="Text" />
        </Style>

        <Style x:Key="VolumeSliderStyle"
               BasedOn="{StaticResource BaseVolumeSliderStyle}"
               TargetType="{x:Type Slider}">
            <Setter Property="Template" Value="{DynamicResource LighOrDark_VolumeSliderTemplate}" />
        </Style>

        <Style x:Key="{x:Type ListViewItem}"
               BasedOn="{StaticResource BaseListViewItemStyle}"
               TargetType="ListViewItem" />
    </Window.Resources>

    <Grid>

        <Border Name="AcrylicBackgroundActive" Theme:Brush.Background="AcrylicBackground" />

        <Border Name="AcrylicBackgroundInactive">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Theme:Brush.Background" Value="AcrylicBackgroundFallback" />
                    <Setter Property="Opacity" Value="1" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Source={StaticResource ThemeManager}, Path=AnimationsEnabled}" Value="True" />
                                <Condition Binding="{Binding ElementName=WindowRoot, Path=IsActive}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="IsActive_Exit_AnimationsOff" />
                                <StopStoryboard BeginStoryboardName="IsActive_Enter_AnimationsOff" />
                                <BeginStoryboard Name="IsActive_Enter_AnimationsOn">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="00:00:00.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="IsActive_Enter_AnimationsOff" />
                                <StopStoryboard BeginStoryboardName="IsActive_Exit_AnimationsOff" />
                                <BeginStoryboard Name="IsActive_Exit_AnimationsOn">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="00:00:00.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Source={StaticResource ThemeManager}, Path=AnimationsEnabled}" Value="False" />
                                <Condition Binding="{Binding ElementName=WindowRoot, Path=IsActive}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="IsActive_Enter_AnimationsOn" />
                                <StopStoryboard BeginStoryboardName="IsActive_Exit_AnimationsOn" />
                                <BeginStoryboard Name="IsActive_Enter_AnimationsOff">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="00:00:00" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="IsActive_Exit_AnimationsOn" />
                                <StopStoryboard BeginStoryboardName="IsActive_Enter_AnimationsOn" />
                                <BeginStoryboard Name="IsActive_Exit_AnimationsOff">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="00:00:00" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

        <DockPanel x:Name="ContentRoot">
            <DockPanel DockPanel.Dock="Top">
                <Button x:Name="CloseButton"
                        Click="CloseButton_Click"
                        Content="&#xE8BB;"
                        DockPanel.Dock="Right"
                        Style="{DynamicResource CloseButtonStyle}" />
                <TextBlock Padding="20,8,20,8"
                           DockPanel.Dock="Left"
                           Text="{Binding ElementName=WindowRoot, Path=Title}"
                           TextAlignment="Left" />
            </DockPanel>
            <Grid>
                <ScrollViewer x:Name="BaseVisual"
                              ScrollViewer.HorizontalScrollBarVisibility="Auto"
                              ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <ItemsControl IsTabStop="False" ItemsSource="{Binding AllDevices}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <ItemContainerTemplate>
                                <views:DeviceView Width="{StaticResource WindowAndItemSize}" Device="{Binding}" />
                            </ItemContainerTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>

                <views:VolumeControlPopup x:Name="AppPopup"
                                          IsPopupVisible="{Binding Dialog.IsVisible, Mode=TwoWay}"
                                          Tag="{Binding Dialog.Source}">
                    <ContentControl Content="{Binding Dialog.Focused}" />
                </views:VolumeControlPopup>
            </Grid>
        </DockPanel>

        <Border Name="LightDismissBorder"
                Theme:Brush.Background="Background"
                PreviewMouseDown="LightDismissBorder_PreviewMouseDown">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Dialog.IsVisible}" Value="True" />
                                <Condition Binding="{Binding Source={StaticResource ThemeManager}, Path=AnimationsEnabled}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="EnterLightDismiss_AnimationsOff" />
                                <StopStoryboard BeginStoryboardName="ExitLightDismiss_AnimationsOff" />
                                <BeginStoryboard Name="EnterLightDismiss_AnimationsOn">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="0"
                                                         To="1"
                                                         Duration="00:00:00.15" />
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="EnterLightDismiss_AnimationsOff" />
                                <StopStoryboard BeginStoryboardName="ExitLightDismiss_AnimationsOff" />
                                <BeginStoryboard Name="ExitLightDismiss_AnimationsOn">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="1"
                                                         To="0"
                                                         Duration="00:00:00.15" />
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.15" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Dialog.IsVisible}" Value="True" />
                                <Condition Binding="{Binding Source={StaticResource ThemeManager}, Path=AnimationsEnabled}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="EnterLightDismiss_AnimationsOn" />
                                <StopStoryboard BeginStoryboardName="ExitLightDismiss_AnimationsOn" />
                                <BeginStoryboard Name="EnterLightDismiss_AnimationsOff">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="EnterLightDismiss_AnimationsOn" />
                                <StopStoryboard BeginStoryboardName="ExitLightDismiss_AnimationsOn" />
                                <BeginStoryboard Name="ExitLightDismiss_AnimationsOff">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Border Margin="0,0,0,14" Opacity="0.8">
                <Border.Effect>
                    <BlurEffect KernelType="Gaussian"
                                Radius="{StaticResource WindowBlurRadius}"
                                RenderingBias="Performance" />
                </Border.Effect>
                <Border.Background>
                    <VisualBrush AlignmentX="Left"
                                 AlignmentY="Top"
                                 Stretch="UniformToFill"
                                 Visual="{Binding ElementName=ContentRoot}" />
                </Border.Background>
            </Border>
        </Border>
    </Grid>
</Window>
